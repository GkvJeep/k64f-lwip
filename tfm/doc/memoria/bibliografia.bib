@book{jime13,
   title =     {Introduction to Embedded Systems: Using Microcontrollers and the MSP430},               
   author =    {Jim√©nez, Manuel and Palomera, Rogelio and Couvertier, Isidoro},
   publisher = {Springer-Verlag New York},
   isbn =      {978-1-4614-3142-8,978-1-4614-3143-5},
   year =      {2014},
   edition =   {1},
}

@book{marw18,
   title =     {Embedded System Design : Embedded Systems, Foundations of Cyber-Physical Systems, and the Internet of Things},
   author =    {Marwedel, Peter},
   publisher = {Springer International Publishing : Imprint: Springer},
   isbn =      {978-3-319-56043-4,3319560433,978-3-319-56045-8,331956045X},
   year =      {2018},
   series =    {Embedded Systems},
   edition =   {3rd ed.}
}

@misc{nxp01,
  author = {{NXP Semiconductors}},
  title = {{Refrigerator}},
  howpublished = "\url{https://www.nxp.com/applications/solutions/internet-of-things/smart-things/smart-home/refrigerator:REFRIGERATOR}",
  year = {2019}, 
  note = "[Consulta: 25-1-2019]"
}

@book{butt16,
   title =     {A Dictionary of Computer Science},
   author =    {Butterfield, Andrew and Ekembe Ngondi, Gerard and Kerr, Anne},
   publisher = {Oxford University Press},
   isbn =      {0199688974,9780199688975},
   year =      {2016},
   series =    {Oxford Quick Reference},
   edition =   {7},
}

@misc{amaz19,
  author = {{Amazon.com, Inc.}},
  title = {{Why RTOS and What is RTOS?}},
  howpublished = "\url{https://www.freertos.org/about-RTOS.html}",
  year = {2019}, 
  note = "[Consulta: 25-1-2019]"
}

@techReport{itut94,
  author =      {ITU-T},
  title =       {Information technology - Open Systems Interconnection - Basic Reference Model: The basic model},
  institution = {International Telecommunication Union},
  type =        {Recommendation},
  number =      {X.200},
  address =     {Ginebra},
  year =        {1994},
}

@book{kozi05,
   title =     {The TCP/IP Guide: A Comprehensive, Illustrated Internet Protocols Reference},
   author =    {Kozierok, Charles M.},
   publisher = {No Starch Press},
   isbn =      {9781593270476,159327047X},
   year =      {2005},
   edition =   {1}
}

@techreport{rfc1122,
  series =	     {Request for Comments},
  number =	     1122,
  howpublished = {RFC 1122},
  publisher =	   {RFC Editor},
  doi =		       {10.17487/RFC1122},
  url =		       {https://rfc-editor.org/rfc/rfc1122.txt},
  author =	     {Braden, Robert T.},
  title =		     {{Requirements for Internet Hosts - Communication Layers}},
  pagetotal =	   116,
  year =		     1989,
  month =		     oct,
  abstract =     {This RFC is an official specification for the Internet
                  community. It incorporates by reference, amends, corrects,
                  and supplements the primary protocol standards documents
                  relating to hosts. {[}STANDARDS-TRACK{]}},
}

@techreport{rfc1123,
  series =	     {Request for Comments},
  number =	     1123,
  howpublished = {RFC 1123},
  publisher =	   {RFC Editor},
  doi =		       {10.17487/RFC1123},
  url =		       {https://rfc-editor.org/rfc/rfc1123.txt},
  author =	     {Braden, Robert T.},
  title =		     {{Requirements for Internet Hosts - Application and Support}},
  pagetotal =	   98,
  year =         1989,
  month =        oct,
  abstract =     {This RFC is an official specification for the Internet
                  community. It incorporates by reference, amends, corrects,
                  and supplements the primary protocol standards documents
                  relating to hosts. {[}STANDARDS-TRACK{]}},
}

@techreport{rfc1055,
  series =       {Request for Comments},
  number =       1055,
  howpublished = {RFC 1055},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC1055},
  url =          {https://rfc-editor.org/rfc/rfc1055.txt},
  author =       {Romkey, J.},
  title =        {{Nonstandard for transmission of IP datagrams over serial lines: SLIP}},
  pagetotal =	   6,
  year =		     1988,
  month =		     jun,
  abstract =	   {The TCP/IP protocol family runs over a variety of network
                  media: IEEE 802.3 (ethernet) and 802.5 (token ring) LAN's,
                  X.25 lines, satellite links, and serial lines. There are
                  standard encapsulations for IP packets defined for many of
                  these networks, but there is no standard for serial lines.
                  SLIP, Serial Line IP, is a currently a de facto standard,
                  commonly used for point-to-point serial connections running
                  TCP/IP. It is not an Internet standard.},
}

@techreport{rfc1661,
  series =       {Request for Comments},
  number =       1661,
  howpublished = {RFC 1661},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC1661},
  url =          {https://rfc-editor.org/rfc/rfc1661.txt},
  author =       {Simpson, William A.},
  title =        {{The Point-to-Point Protocol (PPP)}},
  pagetotal =    53,
  year =         1994,
  month =        jul,
  abstract =	   {This document defines the PPP organization and methodology,
                  and the PPP encapsulation, together with an extensible option
                  negotiation mechanism which is able to negotiate a rich
                  assortment of configuration parameters and provides additional
                  management functions. {[}STANDARDS-TRACK{]}},
}

@techreport{rfc826,
  series =       {Request for Comments},
  number =       826,
  howpublished = {RFC 826},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC0826},
  url =          {https://rfc-editor.org/rfc/rfc826.txt},
  author =       {Plummer, David C.},
  title =        {{An Ethernet Address Resolution Protocol: Or Converting Network Protocol Addresses to 48.bit Ethernet Address for Transmission on Ethernet Hardware}},
  pagetotal =    10,
  year =         1982,
  month =        nov,
  abstract =     {The purpose of this RFC is to present a method of Converting
                  Protocol Addresses (e.g., IP addresses) to Local Network
                  Addresses (e.g., Ethernet addresses). This is an issue of
                  general concern in the ARPA Internet Community at this time.
                  The method proposed here is presented for your consideration
                  and comment. This is not the specification of an Internet
                  Standard.},
}

@techreport{rfc4861,
  series =       {Request for Comments},
  number =       4861,
  howpublished = {RFC 4861},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC4861},
  url =	         {https://rfc-editor.org/rfc/rfc4861.txt},
  author =       {Simpson, William A. and others},
  title =        {{Neighbor Discovery for IP version 6 (IPv6)}},
  pagetotal =    97,
  year =         2007,
  month =        sep,
  abstract =     {This document specifies the Neighbor Discovery protocol for IP
                  Version 6. IPv6 nodes on the same link use Neighbor Discovery
                  to discover each other's presence, to determine each other's
                  link-layer addresses, to find routers, and to maintain
                  reachability information about the paths to active neighbors.
                  {[}STANDARDS-TRACK{]}},
}

@techreport{rfc791,
  series =       {Request for Comments},
  number =       791,
  howpublished = {RFC 791},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC0791},
  url =          {https://rfc-editor.org/rfc/rfc791.txt},
  author =       {Postel, J. (ed.)},
  title =        {{Internet Protocol}},
  pagetotal =    51,
  year =         1981,
  month =        sep,
  abstract =     {This document specifies the DoD Standard Internet Protocol.
                  This document is based on six earlier editions of the ARPA
                  Internet Protocol Specification, and the present text draws
                  heavily from them.  There have been many contributors to this
                  work both in terms of concepts and in terms of text. This
                  edition revises aspects of addressing, error handling, option
                  codes, and the security, precedence, compartments, and 
                  handling restriction features of the internet protocol.},
}

@techreport{rfc2460,
  series =       {Request for Comments},
  number =       2460,
  howpublished = {RFC 2460},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC2460},
  url =          {https://rfc-editor.org/rfc/rfc2460.txt},
  author =       {Hinden, Bob and Deering, Dr. Steve E.},
  title =        {{Internet Protocol, Version 6 (IPv6) Specification}},
  pagetotal =    39,
  year =         1998,
  month =        dec,
  abstract =     {This document specifies version 6 of the Internet Protocol
                  (IPv6), also sometimes referred to as IP Next Generation or
                  IPng. {[}STANDARDS-TRACK{]}},
}

@techreport{rfc792,
  series =       {Request for Comments},
  number =       792,
  howpublished = {RFC 792},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC0792},
  url =          {https://rfc-editor.org/rfc/rfc792.txt},
  author =       {Postel J.},
  title =        {{Internet Control Message Protocol}},
  pagetotal =    21,
  year =         1981,
  month =        sep,
  abstract =     {},
}

@techreport{rfc4443,
  series =       {Request for Comments},
  number =       4443,
  howpublished = {RFC 4443},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC4443}, 
  url =          {https://rfc-editor.org/rfc/rfc4443.txt},
  author =       {Gupta, Mukesh and Conta, Alex},
  title =        {{Internet Control Message Protocol (ICMPv6) for the Internet Protocol Version 6 (IPv6) Specification}},
  pagetotal =    24,
  year =         2006,
  month =        mar,
  abstract =     {This document describes the format of a set of control
                  messages used in ICMPv6 (Internet Control Message Protocol).
                  ICMPv6 is the Internet Control Message Protocol for Internet
                  Protocol version 6 (IPv6). {[}STANDARDS-TRACK{]}},
}

@techreport{rfc4604,
  series =       {Request for Comments},
  number =       4604,
  howpublished = {RFC 4604},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC4604},
  url =          {https://rfc-editor.org/rfc/rfc4604.txt},
  author =       {Holbrook, Hugh and {Storigen Systems} and Haberman, Brian},
  title =        {{Using Internet Group Management Protocol Version 3 (IGMPv3)
                  and Multicast Listener Discovery Protocol Version 2 (MLDv2)
                  for Source-Specific Multicast}},
  pagetotal =	   11,
  year =         2006,
  month =        aug,
  abstract =     {The Internet Group Management Protocol Version 3 (IGMPv3) and
                  the Multicast Listener Discovery Protocol Version 2 (MLDv2)
                  are protocols that allow a host to inform its neighboring
                  routers of its desire to receive IPv4 and IPv6 multicast
                  transmissions, respectively. Source-specific multicast (SSM)
                  is a form of multicast in which a receiver is required to
                  specify both the network-layer address of the source and the
                  multicast destination address in order to receive the
                  multicast transmission. This document defines the notion of an
                  "SSM-aware" router and host, and clarifies and (in some cases)
                  modifies the behavior of IGMPv3 and MLDv2 on SSM-aware routers
                  and hosts to accommodate source-specific multicast. This
                  document updates the IGMPv3 and MLDv2 specifications.
                  {[}STANDARDS-TRACK{]}},
}

@techreport{rfc793,
  series =       {Request for Comments},
  number =       793,
  howpublished = {RFC 793},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC0793},
  url =          {https://rfc-editor.org/rfc/rfc793.txt},
  author =       {Postel, J. (ed.)},
  title =        {{Transmission Control Protocol}},
  pagetotal =    91,
  year =         1981,
  month =        sep,
  abstract =     {This document describes the DoD Standard Transmission Control
                  Protocol (TCP). There have been nine earlier editions of the
                  ARPA TCP specification on which this standard is based, and
                  the present text draws heavily from them. There have been many
                  contributors to this work both in terms of concepts and in
                  terms of text. This edition clarifies several details and
                  removes the end-of-letter buffer-size adjustments, and
                  redescribes the letter mechanism as a push function.},
}

@techreport{rfc768,
  series =       {Request for Comments},
  number =       768,
  howpublished = {RFC 768},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC0768},
  url =          {https://rfc-editor.org/rfc/rfc768.txt},
  author =       {Postel, J.},
  title =        {{User Datagram Protocol}},
  pagetotal =    3,
  year =         1980,
  month =        aug,
  abstract =     {This User Datagram Protocol (UDP) is defined to makeavailable
                  a datagram mode of packet-switched computer communication in
                  the environment of an interconnected set of computer networks.
                  This protocol assumes that the Internet Protocol (IP) is used
                  as the underlying protocol. This protocol provides a procedure
                  for application programs to send messages to other programs
                  with a minimum of protocol mechanism. The protocol is
                  transaction oriented, and delivery and duplicate protection
                  are not guaranteed. Applications requiring ordered reliable
                  delivery of streams of data should use the Transmission
                  Control Protocol (TCP).},
}

@techreport{rfc2131,
  series =       {Request for Comments},
  number =       2131,
  howpublished = {RFC 2131},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC2131},
  url =          {https://rfc-editor.org/rfc/rfc2131.txt},
  author =       {Droms, Ralph},
  title =        {{Dynamic Host Configuration Protocol}},
  pagetotal =    45,
  year =         1997,
  month =        mar,
  abstract =     {The Dynamic Host Configuration Protocol (DHCP) provides a
                  framework for passing configuration information to hosts on a 
                  TCPIP network. DHCP is based on the Bootstrap Protocol
                  (BOOTP), adding the capability of automatic allocation of
                  reusable network addresses and additional configuration
                  options. {[}STANDARDS-TRACK{]}},
}

@techreport{rfc1034,
  series =       {Request for Comments},
  number =       1034,
  howpublished = {RFC 1034},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC1034},
  url =          {https://rfc-editor.org/rfc/rfc1034.txt},
  author =	     {Mockapetris, P.},
  title =        {{Domain names - concepts and facilities}},
  pagetotal =    55,
  year =         1987,
  month =        nov,
  abstract =     {This RFC is the revised basic definition of The Domain Name
                  System. It obsoletes RFC-882. This memo describes the domain
                  style names and their used for host address look up and
                  electronic mail forwarding. It discusses the clients and
                  servers in the domain name system and the protocol used
                  between them.},
}

@techreport{rfc1035,
  series =       {Request for Comments},
  number =       1035,
  howpublished = {RFC 1035},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC1035},
  url =          {https://rfc-editor.org/rfc/rfc1035.txt},
  author =       {Mockapetris, P.},
  title =        {{Domain names - implementation and specification}},
  pagetotal =    55,
  year =         1987,
  month =        nov,
  abstract =     {This RFC is the revised specification of the protocol and
                  format used in the implementation of the Domain Name System.
                  It obsoletes RFC-883. This memo documents the details of the
                  domain name client - server communication.},
}

@techreport{rfc7230,
  series =       {Request for Comments},
  number =       7230,
  howpublished = {RFC 7230},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC7230},
  url =          {https://rfc-editor.org/rfc/rfc7230.txt},
  author =       {Fielding, Roy T. and Reschke, Julian},
  title =        {{Hypertext Transfer Protocol (HTTP/1.1): Message Syntax and Routing}},
  pagetotal =    89,
  year =         2014,
  month =        jun,
  abstract =     {The Hypertext Transfer Protocol (HTTP) is a stateless
                  application-level protocol for distributed, collaborative,
                  hypertext information systems. This document provides an
                  overview of HTTP architecture and its associated terminology,
                  defines the "http" and "https" Uniform Resource Identifier
                  (URI) schemes, defines the HTTP/1.1 message syntax and parsing
                  requirements, and describes related security concerns for
                  implementations.},
}

@techreport{rfc2818,
  series =       {Request for Comments},
  number =       2818,
  howpublished = {RFC 2818},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC2818},
  url =          {https://rfc-editor.org/rfc/rfc2818.txt},
  author =       {Rescorla, Eric},
  title =        {{HTTP Over TLS}},
  pagetotal =    7,
  year =         2000,
  month =        may,
  abstract =     {This memo describes how to use Transport Layer Security (TLS)
                  to secure Hypertext Transfer Protocol (HTTP) connections over
                  the Internet. This memo provides information for the Internet
                  community.},
}

@techreport{rfc7540,
  series =       {Request for Comments},
  number =       7540,
  howpublished = {RFC 7540},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC7540},
  url =          {https://rfc-editor.org/rfc/rfc7540.txt},
  author =       {Belshe, Mike and Peon, Roberto and Thomson, Martin},
  title =        {{Hypertext Transfer Protocol Version 2 (HTTP/2)}},
  pagetotal =    96,
  year =         2015,
  month =        may,
  abstract =     {This specification describes an optimized expression of the
                  semantics of the Hypertext Transfer Protocol (HTTP), referred
                  to as HTTP version 2 (HTTP/2). HTTP/2 enables a more efficient
                  use of network resources and a reduced perception of latency
                  by introducing header field compression and allowing multiple
                  concurrent exchanges on the same connection. It also
                  introduces unsolicited push of representations from servers to
                  clients. This specification is an alternative to, but does not
                  obsolete, the HTTP/1.1 message syntax. HTTP's existing
                  semantics remain unchanged.},
}

@techreport{rfc3501,
  series =       {Request for Comments},
  number =       3501,
  howpublished = {RFC 3501},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC3501},
  url =          {https://rfc-editor.org/rfc/rfc3501.txt},
  author =	     {Crispin, Mark},
  title =		     {{INTERNET MESSAGE ACCESS PROTOCOL - VERSION 4rev1}},
  pagetotal =    108,
  year =         2003,
  month =        mar,
  abstract =     {The Internet Message Access Protocol, Version 4rev1
                  (IMAP4rev1) allows a client to access and manipulate
                  electronic mail messages on a server. IMAP4rev1 permits
                  manipulation of mailboxes (remote message folders) in a way
                  that is functionally equivalent to local folders. IMAP4rev1
                  also provides the capability for an offline client to
                  resynchronize with the server. IMAP4rev1 includes operations
                  for creating, deleting, and renaming mailboxes, checking for
                  new messages, permanently removing messages, setting and
                  clearing flags, RFC 2822 and RFC 2045 parsing, searching, and
                  selective fetching of message attributes, texts, and portions
                  thereof. Messages in IMAP4rev1 are accessed by the use of
                  numbers. These numbers are either message sequence numbers or
                  unique identifiers. IMAP4rev1 supports a single server.
                  A mechanism for accessing configuration information to support
                  multiple IMAP4rev1 servers is discussed in RFC 2244. IMAP4rev1
                  does not specify a means of posting mail; this function is
                  handled by a mail transfer protocol such as RFC 2821.
                  {[}STANDARDS-TRACK{]}},
}

@techreport{rfc1939,
  series =       {Request for Comments},
  number =       1939,
  howpublished = {RFC 1939},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC1939},
  url =          {https://rfc-editor.org/rfc/rfc1939.txt},
  author =       {Rose, Dr. Marshall T. and Myers, John G.},
  title =        {{Post Office Protocol - Version 3}},
  pagetotal =    23,
  year =         1996,
  month =        may,
  abstract =     {The Post Office Protocol - Version 3 (POP3) is intended to
                  permit a workstation to dynamically access a maildrop on a
                  server host in a useful fashion. {[}STANDARDS-TRACK{]}},
}

@techreport{rfc5321,
  series =       {Request for Comments},
  number =       5321,
  howpublished = {RFC 5321},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC5321},
  url =          {https://rfc-editor.org/rfc/rfc5321.txt},
  author =       {Klensin, Dr. John C.},
  title =        {{Simple Mail Transfer Protocol}},
  pagetotal =    95,
  year =         2008,
  month =        oct,
  abstract =     {This document is a specification of the basic protocol for
                  Internet electronic mail transport. It consolidates, updates,
                  and clarifies several previous documents, making all or parts
                  of most of them obsolete. It covers the SMTP extension
                  mechanisms and best practices for the contemporary Internet,
                  but does not provide details about particular extensions.
                  Although SMTP was designed as a mail transport and delivery
                  protocol, this specification also contains information that is
                  important to its use as a "mail submission" protocol for
                  "split-UA" (User Agent) mail reading systems and mobile
                  environments. {[}STANDARDS-TRACK{]}},
}

@techreport{rfc5905,
  series =       {Request for Comments},
  number =       5905,
  howpublished = {RFC 5905},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC5905},
  url =          {https://rfc-editor.org/rfc/rfc5905.txt},
  author =       {Martin, Jim and others},
  title =        {{Network Time Protocol Version 4: Protocol and Algorithms Specification}},
  pagetotal =    110,
  year =         2010,
  month =        jun,
  abstract =     {The Network Time Protocol (NTP) is widely used to synchronize
                  computer clocks in the Internet. This document describes NTP
                  version 4 (NTPv4), which is backwards compatible with NTP
                  version 3 (NTPv3), described in RFC 1305, as well as previous
                  versions of the protocol. NTPv4 includes a modified protocol
                  header to accommodate the Internet Protocol version 6 address
                  family. NTPv4 includes fundamental improvements in the
                  mitigation and discipline algorithms that extend the potential
                  accuracy to the tens of microseconds with modern workstations
                  and fast LANs. It includes a dynamic server discovery scheme,
                  so that in many cases, specific server configuration is not
                  required. It corrects certain errors in the NTPv3 design and
                  implementation and includes an optional extension mechanism.
                  {[}STANDARDS-TRACK{]}},
}

@techreport{rfc3261,
  series =       {Request for Comments},
  number =       3261,
  howpublished = {RFC 3261},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC3261},
  url =          {https://rfc-editor.org/rfc/rfc3261.txt},
  author =       {Schooler, Eve and others},
  title =        {{SIP: Session Initiation Protocol}},
  pagetotal =    269,
  year =         2002,
  month =        jul,
  abstract =     {This document describes Session Initiation Protocol (SIP), an
                  application-layer control (signaling) protocol for creating,
                  modifying, and terminating sessions with one or more
                  participants. These sessions include Internet telephone calls,
                  multimedia distribution, and multimedia conferences.
                  {[}STANDARDS-TRACK{]}},
}

@techreport{rfc4253,
  series =       {Request for Comments},
  number =       4253,
  howpublished = {RFC 4253},
  publisher =    {RFC Editor},
  doi =          {10.17487/RFC4253},
  url =          {https://rfc-editor.org/rfc/rfc4253.txt},
  author =       {Lonvick, Chris M. and Ylonen, Tatu},
  title =        {{The Secure Shell (SSH) Transport Layer Protocol}},
  pagetotal =    32,
  year =         2006,
  month =        jan,
  abstract =     {The Secure Shell (SSH) is a protocol for secure remote login
                  and other secure network services over an insecure network.
                  This document describes the SSH transport layer protocol,
                  which typically runs on top of TCP/IP. The protocol can be
                  used as a basis for a number of secure network services. It
                  provides strong encryption, server authentication, and
                  integrity protection. It may also provide compression.Key
                  exchange method, public key algorithm, symmetric encryption
                  algorithm, message authentication algorithm, and hash
                  algorithm are all negotiated. This document also describes the
                  Diffie-Hellman key exchange method and the minimal set of
                  algorithms that are needed to implement the SSH transport
                  layer protocol. {[}STANDARDS-TRACK{]}},
}

@techreport{bank15,
  howpublished = {MQTT Version 3.1.1 Plus Errata 01},
  publisher =    {OASIS},
  url =          {http://docs.oasis-open.org/mqtt/mqtt/v3.1.1/errata01/os/mqtt-v3.1.1-errata01-os-complete.html},
  author =       {Banks, Andrew and Guptau, Rahul},
  title =        {{MQTT Version 3.1.1 Plus Errata 01}},
  pagetotal =    80,
  year =         2015,
  month =        dec,
  abstract =     {MQTT is a Client Server publish/subscribe messaging transport
                  protocol. It is light weight, open, simple, and designed so as
                  to be easy to implement. These characteristics make it ideal
                  for use in many situations, including constrained environments
                  such as for communication in Machine to Machine (M2M) and
                  Internet of Things (IoT) contexts where a small code footprint
                  is required and/or network bandwidth is at a premium.},
}

@techreport{rfc7252,
  series =       {Request for Comments},
  number =       7252,
  howpublished = {RFC 7252},
  publisher =	   {RFC Editor},
  doi =          {10.17487/RFC7252},
  url =          {https://rfc-editor.org/rfc/rfc7252.txt},
  author =       {Shelby,Zach and Hartke, Klaus and Bormann, Carsten},
  title =        {{The Constrained Application Protocol (CoAP)}},
  pagetotal =    112,
  year =         2014,
  month =        jun,
  abstract =     {The Constrained Application Protocol (CoAP) is a specialized
                  web transfer protocol for use with constrained nodes and
                  constrained (e.g., low-power, lossy) networks. The nodes
                  often have 8-bit microcontrollers with small amounts of ROM
                  and RAM, while constrained networks such as IPv6 over
                  Low-Power Wireless Personal Area Networks (6LoWPANs) often
                  have high packet error rates and a typical throughput of 10s
                  of kbit/s. The protocol is designed for machine- to-machine
                  (M2M) applications such as smart energy and building
                  automation. CoAP provides a request/response interaction model
                  between application endpoints, supports built-in discovery of
                  services and resources, and includes key concepts of the Web
                  such as URIs and Internet media types. CoAP is designed to
                  easily interface with HTTP for integration with the Web while
                  meeting specialized requirements such as multicast support,
                  very low overhead, and simplicity for constrained
                  environments.},
}
